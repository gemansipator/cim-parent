version: '3.8'

services:
  db:
    image: postgres:18
    environment:
      POSTGRES_DB: cim_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:  # Добавлено: healthcheck для db
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cim-network

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy  # Добавлено: ждёт healthcheck db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/cim_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    networks:
      - cim-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - app
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - cim-network

  nocodb:
    image: nocodb/nocodb:0.92.4
    ports:
      - "8090:8080"
    environment:
      - NC_DB=pg://db:5432?u=postgres&p=postgres&d=cim_db
    depends_on:
      db:
        condition: service_healthy  # Добавлено: ждёт db
    networks:
      - cim-network

  ifc-viewer:
    build:
      context: C:/Users/geman/WebstormProjects/cim-ifc-viewer
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    networks:
      - cim-network

volumes:
  db_data:

networks:
  cim-network:
    driver: bridge